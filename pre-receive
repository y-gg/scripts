#!/bin/sh
#
# An example hook script to make use of push options.
# The example simply echoes all push options that start with 'echoback='
# and rejects all pushes when the "reject" push option is used.
#
# To enable this hook, rename this file to "pre-receive".

if test -n "$GIT_PUSH_OPTION_COUNT"
then
	i=0
	while test "$i" -lt "$GIT_PUSH_OPTION_COUNT"
	do
		eval "value=\$GIT_PUSH_OPTION_$i"
		case "$value" in
		echoback=*)
			echo "echo from the pre-receive-hook: ${value#*=}" >&2
			;;
		reject)
			exit 1
		esac
		i=$((i + 1))
	done
fi

unset GIT_DIR
cd ..
CHANGE_FILES_STAGE=$(git diff --cached --name-only)
CHANGE_FILES_UNSTAGE=$(git diff --name-only)
CHANGE_FILE_COUNT=0
for var in $CHANGE_FILES_STAGE
do
    if [ $var != "" ];then
	    ((CHANGE_FILE_COUNT++))
	fi	
done

if [ $CHANGE_FILE_COUNT -gt 0 ];then
    echo 'Changes no commit:'
	echo '  (use "git reset HEAD <file>..." to unstage)'
    echo ''
	echo -e '  \033[32m modified:\033[0m'
	for var in $CHANGE_FILES_STAGE
	do
	    echo -e "\033[32m      $var \033[0m"
	done
fi

for var in $CHANGE_FILES_UNSTAGE
do
    if [ $var != "" ];then
	    ((CHANGE_FILE_COUNT++))
	fi	
done

if [ $CHANGE_FILE_COUNT -gt 0 ];then
    echo 'Changes not staged for commit:'
	echo '(use "git add <file>..." to update what will be committed)'
    echo '(use "git checkout -- <file>..." to discard changes in working directory)'
    echo ''
	echo -e '\033[31m   modified:\033[0m'
	for var in $CHANGE_FILES_UNSTAGE
	do
	    echo -e "\033[31m      $var \033[0m"
	done
    exit 1
fi
exit 0
